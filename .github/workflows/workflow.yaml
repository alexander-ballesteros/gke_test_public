# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: eminent-monitor-387120
  GKE_CLUSTER: cluster-1    # Add your cluster name here.
  GKE_ZONE: us-central1-c   # Add your cluster zone here.
  DEPLOYMENT_NAME: gke-test # Add your deployment name here.
  IMAGE: static-site

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: development

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: eminent-monitor-387120

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
      with:
        cluster_name: 'destrotestgkecluster'
        project_id: eminent-monitor-387120
        location: us-east1-b
        credentials_json: ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAiZW1pbmVudC1t b25pdG9yLTM4NzEyMCIsCiAgInByaXZhdGVfa2V5X2lkIjogIjNkZTA2Mzg1MzUzN2M5YzUyZjFl OWNkY2JmMWJiNjZiYzdhMzU1ZmMiLAogICJwcml2YXRlX2tleSI6ICItLS0tLUJFR0lOIFBSSVZB VEUgS0VZLS0tLS1cbk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VB QW9JQkFRQ2p6T0U0dUx1VWU4R3BcbkN5RHIvRlZFcXYzNWxkdlpDd25PQTZyMzVuT05pZzAycjB1 dFhSZ2NILzJiN3FvNHdGZmdqNUtKQXBrd0NsMUlcbjg1RE9OdHRsRnFIek9Fd3pheEJrWGZkcU9i VVRPMHRFYWFyaTJFemRSWWZ4aUlsUkJpTElMUHVORXgvNjB0Si9cbjYrZURMcERaaDF3OEJaWVM2 cXNJQ3NnbDNNUUhWQzhTUEJla0dkZkxtSkZicndqcVZ6a21MYnBEOW5XczZQV01cbnlzQitsZm5H ZmtWdVlOV2xtYVhhWWs3NndETkd2c0V5TWxQdnRseVdjMUlmVFJsM3pFL3NyVWZkWWNIRDYrZ1hc bkl0ZklLYWdicUt2RVgvZkRWQ0xSZ1Y3R1BZaGJpd3VpN09qUUh2dUEzZTMwM3l4eUt3SWV2dEU5 TkFUT3RDZlVcblRVbG4xQnY5QWdNQkFBRUNnZ0VBQkZRSTNJS1hKRktMMkw5c1NJZ1RxYnVaOS9N amlzM3RuYVcvcWdyTElXR1ZcblBVMXZBcjc3d055QWkxTUlhUFQrTFhjbHdGeVM5eS9DN01kUTIz NGNHSVQ3VlEyM0I4SEx2bGMwVHppRXBpUXlcbk5qWFRsK2h1eVljSmsxS1FERlhNNi95eVRmVkVL bERSVXFPRmE5UTZiQ0VWU1JtOXNEVEd2YkRwUG9UaG9pN21cbnF2aWxBUEgyWklaMUpJNWE2Vktm UHpKLzRFdVdMZElKUUtHa0owMHhpaGRRRlN2T1hkNXRseHM4dXBpWGdvT2dcbkNTQVZtY0RoU2Fp cUphbTE3emR4cDM0bXZBSzRyU1pvOFFnRGl4Rm1xamYwa2FsNjJKeTdUeUpPWnNGTHBSdGJcbjY5 RHJjalg3YWlUdmRtaGl4M1kxWU9xOTFFNkZjZmJodTNDN0dZM3I4UUtCZ1FEaHFyNlM5aHBRSU5l RFFSdFJcbjgrNGxKUUZMR2R1WUI1dTdZRFMxRUUzWmlocWRQNWFpWEtCS0ZlUyt1Sm54aCtmWVRj eXNmU1NORno0MUJCT05cbk5zMGthckNZeUU3SUxCWXhnVVVkaDh3M0FldGRaTi85TklPQ2lzM0tP VlhaNVI5OWpheEtOMkFPWUNsUTAyTlRcbmZrYnBmbFdEQVM0cUFxaWZqZnh3MU0yNXNRS0JnUUM1 MFVuYk9DWFhXUWNadE14V1hqZWVucExCd2FJcktHMy9cblJ2TzVuZWVlUU90OER3WDlxL21Nbm8r eVczUlV1Y0dtOWd0eUxnUjdSRHM5Z1lyV3FLUkdkV25ibDJQMDZ5ampcbnQranpqelBCeSsxMGth NFpnNXNEYWcxWDI3UnY2TG9mQUhnZ2V3c0o3M2JYMTJoaGEzd3llbFA3YURWWUM3OU1cblcyTDhZ Vm9PRFFLQmdRQ1JYVk4xaDJKYnkwd0lHS0Jvb2lEOWZHRGc1NzgwcDNJQnVXODZVMDVTbTB1Wmo2 U1FcbjRlbSt6MnVTRDRmYXRoajZsT01MR1hHNkVRYlpUODdvWUN5MUVLVEJSZ2E1bXV5UTV4eUdj VHR6RTZGeGY5RnBcblliSjFITVNEUjN1dDZKSG9acUpkREY2cjQvVzVRdkh3anA5UE9Ub01NVzV6 VVZNZHRIQ3duZVFIZ1FLQmdFcVlcbjBMT25PTm5aTGRhT0ZMSmZwS2lUTkl1QWR1QW9uUEFzeGMr d3FybUhpb0lGYmZ4R3ZDcE54Wlp1ektidTQrVnBcblJYTVRNazFpT1A0YU1XaTN6eXRTRzZ0Q2Zh aG5kOFRqb2l1VlE4djdXRnJCMlVqNDRwUmVVUGtDaE0rZ2VJZlZcbm9tUTN3Vmk5djlJcThnYWFK Z1FGeEExYjZuNXNTT0lZbGdhSDlxVkpBb0dBRnpRUHVUMkRzM1BFR2JvNzRNNE1cbkN6bmlab1dS WW1JaVp5VWNvNEpxSU9EczhTYU45NXFvZmROMjRoeWloTDE4cVE0RkQyOGFORENKWlVDOWZ2SW9c bmE1UnQya1htc0NOOXJZUnhaNzhacFo2eURrVEpScVBjUS9UNGQwMEN2OEx3N2luNDdGZWJMQStu bG14VTNwT0dcbjh4WUFUcEYrVzJBSkVDS2RoSXJiZUFRPVxuLS0tLS1FTkQgUFJJVkFURSBLRVkt LS0tLVxuIiwKICAiY2xpZW50X2VtYWlsIjogInNhZGVzdHJvQGVtaW5lbnQtbW9uaXRvci0zODcx MjAuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLAogICJjbGllbnRfaWQiOiAiMTEyNDQwMTg3NTAx OTkzMDQ3Njc0IiwKICAiYXV0aF91cmkiOiAiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tL28v b2F1dGgyL2F1dGgiLAogICJ0b2tlbl91cmkiOiAiaHR0cHM6Ly9vYXV0aDIuZ29vZ2xlYXBpcy5j b20vdG9rZW4iLAogICJhdXRoX3Byb3ZpZGVyX3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cu Z29vZ2xlYXBpcy5jb20vb2F1dGgyL3YxL2NlcnRzIiwKICAiY2xpZW50X3g1MDlfY2VydF91cmwi OiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vcm9ib3QvdjEvbWV0YWRhdGEveDUwOS9zYWRl c3RybyU0MGVtaW5lbnQtbW9uaXRvci0zODcxMjAuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLAog ICJ1bml2ZXJzZV9kb21haW4iOiAiZ29vZ2xlYXBpcy5jb20iCn0K


    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide